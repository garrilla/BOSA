{"version":3,"sources":["meteor://ðŸ’»app/imports/api/deviceMethods.js","meteor://ðŸ’»app/imports/api/devices.js","meteor://ðŸ’»app/imports/api/messages.js","meteor://ðŸ’»app/imports/api/messagesMethods.js","meteor://ðŸ’»app/imports/api/oscMethods.js","meteor://ðŸ’»app/imports/api/scenes.js","meteor://ðŸ’»app/imports/ui/App.jsx","meteor://ðŸ’»app/imports/ui/Devices.jsx","meteor://ðŸ’»app/imports/ui/Menu.jsx","meteor://ðŸ’»app/imports/ui/Messages.jsx","meteor://ðŸ’»app/client/main.jsx"],"names":["Meteor","methods","deviceUpdate","data","console","log","deviceID","usb","status","battery","volume","entity","DevicesCollection","findOne","update","_id","$set","msg","substr","MsgsCollection","insert","time","Date","now","msg_id","find","count","testMethod","ip","s","SceneCollection","number","current","warning","resetDevice","closeDevice","resetAllDevices","call","multi","remove","Mongo","Collection","msgUpdate","stg","sendOSC","isServer","options","type","send","host","port","udp","dgram","createSocket","message","address","args","value","buf","osc","toBuffer","length","isClient","endPerfOSC","stopMarkerMessage","returnMessage","rewindOSC","App","Devices","_s","devices","useTracker","fetch","boxclass","map","device","name","Menu","useState","counter","setCounter","increment","perfState","callMethod","endPerformMethod","resetAllMethod","Messages","messages","sort","toString","padStart","startup","render","document","getElementById","subscribe"],"mappings":"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","file":"/app.js","sourcesContent":["import { check } from 'meteor/check'\r\nimport { messageTransform } from 'osc-min/lib/osc-utilities'\r\nimport { DevicesCollection } from './devices'\r\nimport {SceneCollection} from './scenes'\r\nimport {MsgsCollection} from './messages'\r\n\r\nMeteor.methods({\r\n    deviceUpdate(data){\r\n        console.log('updating device: ' + data.deviceID\r\n        + \"\\n [usb: \" + data.usb\r\n        + \"; Status: \" + data.status\r\n        + \"; Power: \" + data.battery\r\n        + \"; Volume: \" + data.volume +\"]\");\r\n        //console.log(DevicesCollection.find().count())\r\n        //check(deviceID, String);\r\n        //check(status, String);\r\n        entity = DevicesCollection.findOne({\"device\":data.deviceID});\r\n        //console.log(entity);\r\n        DevicesCollection.update(entity._id, \r\n            {$set: {\"status\" : data.status, \r\n                    \"usb\" : data.usb,\r\n                    \"battery\" : data.battery,\r\n                    \"volume\" : data.volume\r\n                }}\r\n            );\r\n        \r\n        let msg = 'device-' + data.deviceID.substr(12)\r\n         + ' updated with status: ' + data.status\r\n         + ' & usb: ' + data.usb;\r\n        MsgsCollection.insert({msg: msg, time: Date.now(), msg_id: MsgsCollection.find().count()+1});\r\n        console.log(msg);\r\n        //Meteor.call('msg', {msg: msg});\r\n\r\n        return {\"id\":entity._id,\r\n                \"status\":\"sucess\"\r\n                };\r\n    },\r\n    testMethod(data){\r\n        ip = '192.168.60.101';\r\n        if(ip == data.deviceID)\r\n        console.log(data);\r\n        s = SceneCollection.findOne({\"current\": \"true\"});\r\n        //console.log(s);\r\n        SceneCollection.update(s._id,\r\n            {$set: {\"current\": \"false\"\r\n                }}\r\n            );\r\n        \r\n        s = SceneCollection.findOne({number: data.current});\r\n        //console.log(s);\r\n        SceneCollection.update(s._id,\r\n                {$set: {\"current\": \"true\", \"prepping\" : data.warning}}\r\n            );\r\n    },\r\n    resetDevice(data){\r\n        entity = DevicesCollection.findOne({\"device\":data.deviceID});\r\n        //console.log(entity);\r\n        DevicesCollection.update(entity._id, \r\n            {$set: {\"status\" : \"waiting\", \r\n                    \"usb\" : data.usb,\r\n                    \"battery\" : data.battery,\r\n                    \"volume\" : data.volume\r\n                }}\r\n            );\r\n        let msg = 'device-' + data.deviceID.substr(12) + ' reset with status: ' + data.status;\r\n        MsgsCollection.insert({msg: msg, time: Date.now(), msg_id: MsgsCollection.find().count()+1});\r\n        console.log(msg);\r\n\r\n        return {\"id\":entity._id,\r\n                \"status\":\"sucess\"\r\n                };\r\n    },\r\n    closeDevice(data){\r\n        /*\r\n        GH: not sure if ever called\r\n        */ \r\n        //console.log(\"quitting\" + data.deviceID);\r\n        entity = DevicesCollection.findOne({\"device\":data.deviceID});\r\n        //console.log(entity);\r\n        DevicesCollection.update(entity._id, \r\n            {$set: {\"status\" : \"not-present\", \r\n                    \"usb\" : \"?\",\r\n                    \"battery\" : \"?\",\r\n                    \"volume\" : \"?\"\r\n                }}\r\n            );\r\n        //console.log(data.deviceID + ' quit ');\r\n        let msg = 'device-' + data.deviceID.substr(12) + ' app was closed.';\r\n        MsgsCollection.insert({msg: msg, time: Date.now(), msg_id: MsgsCollection.find().count()+1});\r\n        console.log(msg);\r\n\r\n        return {\"id\":entity._id,\r\n                \"status\":\"sucess\"\r\n                };\r\n    },\r\n    \r\n    resetAllDevices(data){\r\n\r\n        Meteor.call('rewindOSC');\r\n        //entity = DevicesCollection.find();\r\n        //console.log(entity);\r\n        DevicesCollection.update({}, \r\n            {$set: {\"status\" : \"reset\", \r\n                    \"usb\" : \"null\",\r\n                    \"battery\" : \"null\",\r\n                    \"volume\" : \"null\"\r\n                }},\r\n                {multi: true}\r\n            );\r\n\r\n            \r\n            \r\n        //    clear messages\r\n        MsgsCollection.remove({});\r\n        //console.log(\"All devices were reset.\");\r\n        let msg = \"All devices in database were reset.\";\r\n        MsgsCollection.insert({msg: msg, time: Date.now(), msg_id: MsgsCollection.find().count()+1});\r\n        console.log(msg);\r\n    }\r\n})\r\n\r\n// Meteor.methods('new-test', function(){\r\n//     console.log('new test');\r\n// }, {\r\n//     url: 'new-test'\r\n// })","import { Mongo } from 'meteor/mongo';\r\n\r\nexport const DevicesCollection = new Mongo.Collection('newdevices');\r\n","import { Mongo } from 'meteor/mongo';\r\n\r\nexport const MsgsCollection = new Mongo.Collection('messages');","import { check } from 'meteor/check'\r\nimport { messageTransform } from 'osc-min/lib/osc-utilities'\r\nimport { MsgsCollection } from './messages'\r\nimport {SceneCollection} from './scenes'\r\n\r\nMeteor.methods({\r\n    msgUpdate(data){\r\n        console.log('msg recived: ' + data.msg);\r\n\r\n        MsgsCollection.insert({msg: entity._id\r\n            }\r\n            );\r\n        console.log('inserted msg to collection: ' + data.msg)\r\n\r\n        return {\"msg:\":data.msg,\r\n                \"status\":\"sucess\"\r\n                };\r\n    },\r\n    msg(stg){\r\n        console.log(stg);\r\n    }\r\n})","import osc from 'osc-min'\r\nimport dgram from 'dgram'\r\nimport { messageTransform } from 'osc-min/lib/osc-utilities';\r\nimport {MsgsCollection} from './messages'\r\n\r\n\r\n    Meteor.methods({\r\n        sendOSC(){\r\n            if (Meteor.isServer){\r\n              const options = {\r\n                type: 'udp4',\r\n                send: {\r\n                host: '192.168.60.54',\r\n                port: 8000\r\n                }\r\n            }\r\n            udp = dgram.createSocket(options.type);\r\n            \r\n            var message = {\r\n                address: \"/play\",\r\n                args: [{type: \"integer\", value: 1}]\r\n              };\r\n            \r\n            //sendMsg = function(msg){\r\n                var buf;\r\n                buf = osc.toBuffer(message)\r\n                udp.send(buf, 0, buf.length, options.send.port, options.send.host);\r\n              //}\r\n            \r\n                 \r\n              let msg = \"Play message broadcast to OSC.\";\r\n              MsgsCollection.insert({msg: msg, time: Date.now(), msg_id: MsgsCollection.find().count()+1});\r\n              console.log(msg);\r\n              \r\n             // var wtf = sendMsg(message);\r\n    \r\n              return {\"status\":\"Message sent\"};  \r\n            }\r\n            if(Meteor.isClient){\r\n                console.log('The sendOSC function was run on the server');\r\n            }\r\n            \r\n        },\r\n        endPerfOSC(){\r\n            if (Meteor.isServer){\r\n                const options = {\r\n                    type: 'udp4',\r\n                    send: {\r\n                    host: '192.168.60.54',\r\n                    port: 8000\r\n                    }\r\n                }\r\n                udp = dgram.createSocket(options.type);\r\n                \r\n                // STOP\r\n                var message = {\r\n                    address: \"/stop\",\r\n                    args: [{type: \"integer\", value: 1}]\r\n                  };\r\n                    var buf;\r\n                    buf = osc.toBuffer(message)\r\n                    udp.send(buf, 0, buf.length, options.send.port, options.send.host);\r\n                \r\n                  // GOTO MARKER\r\n                  var stopMarkerMessage = {\r\n                    address: \"/marker\",\r\n                    args: [{type: \"integer\", value: 2}]\r\n                  };\r\n                \r\n                    var buf;\r\n                    buf = osc.toBuffer(stopMarkerMessage)\r\n                    udp.send(buf, 0, buf.length, options.send.port, options.send.host);\r\n\r\n                  // REWIND TO START\r\n                    var returnMessage = {\r\n                      //address: \"/frames/str\",\r\n                      address: \"/time/str\",\r\n                      args: [{type: \"string\", value: \"0\"}]\r\n                    };\r\n                  \r\n                      var buf;\r\n                      buf = osc.toBuffer(returnMessage)\r\n                      //udp.send(buf, 0, buf.length, options.send.port, options.send.host);\r\n                \r\n                  let msg = \"Stop Performance message sent OSC\";\r\n                  MsgsCollection.insert({msg: msg, time: Date.now(), msg_id: MsgsCollection.find().count()+1});\r\n                  console.log(msg);\r\n                  \r\n                 // var wtf = sendMsg(message);\r\n\r\n                  return {\"status\":\"endPerfOSC Message sent\"};  \r\n            }},\r\n        rewindOSC(){\r\n            if (Meteor.isServer){\r\n                const options = {\r\n                    type: 'udp4',\r\n                    send: {\r\n                    host: '192.168.60.54',\r\n                    port: 8000\r\n                    }\r\n                }\r\n                udp = dgram.createSocket(options.type);\r\n                \r\n                // REWIND TO START\r\n                    var returnMessage = {\r\n                      //address: \"/frames/str\",\r\n                      address: \"/time/str\",\r\n                      args: [{type: \"string\", value: \"0\"}]\r\n                    };\r\n                  \r\n                      var buf;\r\n                      buf = osc.toBuffer(returnMessage)\r\n                      udp.send(buf, 0, buf.length, options.send.port, options.send.host);\r\n                                  \r\n                 // var wtf = sendMsg(message);\r\n\r\n                  return {\"status\":\"endPerfOSC Message sent\"};  \r\n            }\r\n            if(Meteor.isClient){\r\n                console.log('The endPerfOSC function was run on the server');\r\n            }\r\n          }\r\n    });\r\n\r\n\r\n\r\n\r\n  //Meteor.call('devices.update',\"fGXsSmgrB434Hszgq\",\"awtirednessesome\");\r\n/*\r\n\r\n        const options = {\r\n            type: 'udp4',\r\n            send: {\r\n            host: '192.168.178.22',\r\n            port: 8000\r\n            }\r\n        }\r\n        udp = dgram.createSocket(options.type);\r\n        \r\n        var message = {\r\n            address: \"/play\",\r\n            args: [1]\r\n          };\r\n        \r\n        //sendMsg = function(msg){\r\n            var buf;\r\n            buf = osc.toBuffer(msg)\r\n            udp.send(buf, 0, buf.length, options.send.port, options.send.host);\r\n          //}\r\n        \r\n\r\n          \r\n         // var wtf = sendMsg(message);\r\n\r\n          return {\"status\":\"Message sent\"};\r\n*/","import { Mongo } from 'meteor/mongo';\r\n\r\nexport const SceneCollection = new Mongo.Collection('scenes');\r\n","import React from 'react';\r\nimport { Menu } from './Menu.jsx';\r\nimport { Devices } from './Devices.jsx';\r\nimport { Messages } from './Messages.jsx';\r\n\r\nexport const App = () => (\r\n  <div>\r\n    <h1>BOSA !</h1>\r\n    \r\n    <div id=\"flex-container\" className='flex'>\r\n      <Menu/>\r\n      <Devices/>\r\n      <Messages/>\r\n      \r\n    </div>\r\n  </div>\r\n);\r\n\r\n\r\n","import React from 'react';\r\nimport { useTracker } from 'meteor/react-meteor-data';\r\nimport { DevicesCollection } from '../api/devices';\r\n\r\nexport const Devices = () => {\r\n  const devices = useTracker(() => {\r\n    console.log(\"Device collection find() = \",DevicesCollection.find().count())\r\n    return DevicesCollection.find().fetch();\r\n  });\r\n\r\n  var boxclass;\r\n\r\n  return (\r\n    <div id=\"devices\" className='wrapper cf dev-container'>\r\n      <div className='header'>Device Info</div>\r\n      {devices.map(\r\n        device => \r\n        \r\n          <div key={device.name} className={`box ${device.status} ${device.usb}`} name={device._id}> \r\n            <div className='device'>{device.name}</div>\r\n            <div className='status'>usb: \r\n              {device.usb!='true' ? \r\n                <span className='warn'>{device.usb}</span> : \r\n                <span>{device.usb}</span>\r\n                }\r\n            </div><div className='status'>status: <span>{device.status}</span></div>\r\n            <div className='status'>battery: \r\n              {device.battery<50 ? \r\n                <span className='warn'>{device.battery}</span> : \r\n                <span>{device.battery}</span>\r\n                }\r\n            </div>\r\n            <div className='status'>volume: \r\n              {device.volume<100 ? \r\n                <span className='warn'>{device.volume}</span> : \r\n                <span>{device.volume}</span>\r\n                }\r\n              </div>\r\n          </div>\r\n        \r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport '../api/deviceMethods'\r\nimport '../api/oscMethods'\r\n\r\n\r\nexport const Menu = () => {\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  const increment = () => {\r\n    setCounter(counter + 1);\r\n  };\r\n\r\n  let perfState = 'waiting'\r\n\r\n  const callMethod = () => {\r\n    Meteor.call('sendOSC');\r\n    perfState = 'playing';\r\n  };\r\n\r\n  \r\n  const endPerformMethod = () => {\r\n    Meteor.call('endPerfOSC');\r\n    perfState = 'end';\r\n  };\r\n  \r\n  const resetAllMethod = () => {\r\n    Meteor.call('resetAllDevices');\r\n    perfState = 'end';\r\n  };\r\n\r\n  return (\r\n    <div id=\"menu\" className='menu-container'>\r\n      <div className='header'>Menu</div>\r\n      <div>\r\n        <div className=\"btnSpace\"><button className=\"button startPerformance\" onClick={callMethod}>Start Performance</button></div>\r\n        <div className=\"btnSpace\"><button className=\"button endPerformance\" onClick={endPerformMethod}>End Performance</button></div>\r\n        <div className=\"btnSpace\"><button className=\"button resetAll\" onClick={resetAllMethod}>Reset System</button></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useTracker } from 'meteor/react-meteor-data';\r\nimport { MsgsCollection } from '../api/messages';\r\n\r\nexport const Messages = () => {\r\n  const messages = useTracker(() => {\r\n    console.log(\"Messages collection find() = \",MsgsCollection.find().count())\r\n    return MsgsCollection.find({},{sort: {msg_id: -1}}).fetch();\r\n  });\r\n\r\n  var boxclass;\r\n\r\n  return (\r\n    <div id=\"messages\" className='wrapper cf message-container'>\r\n      <div className='header'>Messages</div>\r\n      {messages.map(\r\n        message => \r\n        \r\n          <div> \r\n            <span>{message.msg_id.toString().padStart(3, \"0\")}</span>\r\n            <span>{message.msg}</span>\r\n          </div>\r\n        \r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Meteor } from 'meteor/meteor';\r\nimport { render } from 'react-dom';\r\nimport { App } from '/imports/ui/App';\r\nimport '/imports/api/deviceMethods';\r\nimport '/imports/api/messagesMethods';\r\nimport OSC from 'osc-js';\r\n\r\n\r\nMeteor.startup(() => {\r\n  render(<App/>, document.getElementById('react-target'));\r\n  Meteor.subscribe('devices');\r\n  Meteor.subscribe('messages');\r\n  Meteor.call('resetAllDevices',\"fGXsSmgrB434Hsgaz\",\"awesome\");\r\n});\r\n"]}